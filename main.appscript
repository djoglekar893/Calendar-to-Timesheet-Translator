function start() {
  
  //getting user input on start date
   var ui = SpreadsheetApp.getUi();
   var response = ui.prompt('Starting date? Ex: 1/5/2024', ui.ButtonSet.YES_NO);
  // Process the user's response for start date
  if (response.getSelectedButton() == ui.Button.YES) {
    Logger.log('The user\'s starting date is %s.', response.getResponseText());
    //getting user input on end date
    var response2 = ui.prompt('Ending date? Ex: 1/12/2024', ui.ButtonSet.YES_NO);
    var startingDate = response.getResponseText();
    //process the user's response for end date
    if (response2.getSelectedButton() == ui.Button.YES) {
      Logger.log('The user\'s ending date is %s.', response2.getResponseText());
      var endingDate = response2.getResponseText();
    } else if (response2.getSelectedButton() == ui.Button.NO) {
      Logger.log('The user didn\'t want to provide a ending date.');
    } else {
      Logger.log('The user clicked the close button in the dialog\'s title bar.');
    }
  } else if (response.getSelectedButton() == ui.Button.NO) {
      Logger.log('The user didn\'t want to provide a starting date.');
  } else {
    Logger.log('The user clicked the close button in the dialog\'s title bar.');
  }
  var cal = getCalendar();
  var ss = createTemplates();
  logEvents(ss, startingDate, endingDate, cal);
  replaceDataProjectSheet(ss.getSheetByName("Project"));
  replaceDataOverheadSheet(ss.getSheetByName("Overhead"));
}


function getCalendar() {
  //get info on google calendar by its ID
  cal = CalendarApp.getCalendarById("//replace with your calendar ID");
  return cal;
}


///////
function createTemplates() {
  //get active spreadsheet and sheets
  var ss = SpreadsheetApp.getActive();
  var sheet = ss.getSheetByName("Project");
  var overheadSheet = ss.getSheetByName("Overhead");
  // Create Template for Overhead
  overheadSheet.getRange(1, 1).setValue("Overhead").setBackground('#FFFF00');
  overheadSheet.getRange(1, 2).setValue("Mon").setBackground('#FFFF00');
  overheadSheet.getRange(1, 3).setValue("Tue").setBackground('#FFFF00');
  overheadSheet.getRange(1, 4).setValue("Wed").setBackground('#FFFF00');
  overheadSheet.getRange(1, 5).setValue("Thu").setBackground('#FFFF00');
  overheadSheet.getRange(1, 6).setValue("Fri").setBackground('#FFFF00');
  overheadSheet.getRange(1, 7).setValue("Sat").setBackground('#FFFF00');
  overheadSheet.getRange(1, 8).setValue("Sun").setBackground('#FFFF00');
  overheadSheet.getRange(1, 9).setValue("Total").setBackground('#FFFF00');

  for (var j = 2; j < 1000; j++) {
  var form = sheet.getRange("K" + j);
  form.setFormula("=SUM(" + "D" + j + ":" + "J" + j + ")");
}


  for (var n = 2; n <= 1000; n++) {
    var form2 = overheadSheet.getRange("I" + n);
    form2.setFormula("=SUM(" + "B" + n + ":" + "H" + n + ")");
  }





  return ss;
}


function logEvents(ss, startingDate, endingDate, cal) {
  //variables 
  var sheet = ss.getSheetByName("Project");
  var overheadSheet = ss.getSheetByName("Overhead");
  var events = cal.getEvents(new Date(startingDate), new Date(endingDate));
  var category1000to13000 = [];
  var category0to28 = [];
  var alreadyRecorded1000to13000 = [];
  var firstNumber = [];
  var status = false;
  var timeArr = [];
  var alreadyRecorded0to28 = [];
  var status2 = false;


  var row = 0;
  var overheadRow = 0;

  for (var i = 0; i < events.length; i++) {
    var title = events[i].getTitle();
    var startTime = events[i].getStartTime();
    var endTime = events[i].getEndTime();
    var location = events[i].getLocation();
    var description = events[i].getDescription();
    var firstWord = events[i].getTitle();
    var firstWordNumber = parseInt(firstWord);
    var time = endTime - startTime;

    time = (time/3600000);
    if (time < 0.25) {
      time = 0.25;
    }
    var date = events[i].getStartTime();
    date = date.getDay();
    if (firstWordNumber >= 1000 && firstWordNumber <= 13000) {
      //sort events by their number
      firstNumber.push(firstWordNumber);
      sheet.getRange(row + 2, 1).setValue(firstWordNumber);
      sheet.getRange(row + 2, 3).setValue("Project time");
      sheet.getRange(row + 2, 2).setValue(description);
      sheet.getRange(row + 2, date + 3.0).setValue(time);
      row++;
      category1000to13000.push(firstWordNumber);
    } else if (firstWordNumber >= 0 && firstWordNumber <= 28) {
      var overheadName = firstWord.split("-")[0];
      overheadSheet.getRange(overheadRow + 2, 1.0).setValue(overheadName);
      overheadSheet.getRange(overheadRow + 2, date + 1.0).setValue(time);
      overheadRow++;
      category0to28.push(firstWordNumber);
    } else {
      //ignored to not cause confusion with events that arent project work.
    }
  }
  
}

function replaceDataProjectSheet(sheet) {
    //this code first checks the duplicates by going through the two dimensional array of values and then transfering the number to the two dimensioanl array of uniqueData, if there is a duplicate, if does not transfer any data
  var range = sheet.getRange("A2:H20");
  var values = range.getValues();
  // Create an object to store unique values and their corresponding day numbers
  var uniqueData = {};
  // Iterate through the rows
  for (var i = 0; i < values.length; i++) {
    var row = values[i];
    // Check for duplicates in column A
    if (!uniqueData.hasOwnProperty(row[0])) {
      // If not a duplicate, add to uniqueData with day numbers
      uniqueData[row[0]] = row.slice(1);
    } else {
      // If duplicate, update the day numbers in the existing entry
      for (var j = 3; j < row.length; j++) {
        if (row[j] !== "") {
          uniqueData[row[0]][j - 1] = uniqueData[row[0]][j - 1]  + row[j];
        }
      }
    }
  }
  // Clear the existing data in columns A to H
  range.clearContent();
  // Write the unique values and corresponding day numbers back to columns A to H
  var outputData = [];
  for (var key in uniqueData) {
    Logger.log(uniqueData);
    if (uniqueData.hasOwnProperty(key)) {
      outputData.push([key, ...uniqueData[key]]);
    }
  }
  var outputRange = sheet.getRange(2, 1, outputData.length, outputData[0].length);
  outputRange.setValues(outputData); 
}

function replaceDataOverheadSheet(sheet) {
  //this code first checks the duplicates by going through the two dimensional array of values and then transfering the number to the two dimensioanl array of uniqueData, if there is a duplicate, if does not transfer any data
  var range = sheet.getRange("A2:H20");
  var values = range.getValues();
  // Create an object to store unique values and their corresponding day numbers
  var uniqueData = {};
  // Iterate through the rows
  for (var i = 0; i < values.length; i++) {
    var row = values[i];
    // Check for duplicates in column A
    if (!uniqueData.hasOwnProperty(row[0])) {
      // If not a duplicate, add to uniqueData with day numbers
      uniqueData[row[0]] = row.slice(1);
    } else {
      // If duplicate, update the day numbers in the existing entry
      for (var j = 3; j < row.length; j++) {
        if (row[j] !== "") {
          uniqueData[row[0]][j - 1] = uniqueData[row[0]][j - 1]  + row[j];
        }
      }
    }
  }
  // Clear the existing data in columns A to H
  range.clearContent();
  // Write the unique values and corresponding day numbers back to columns A to H
  var outputData = [];
  for (var key in uniqueData) {
    Logger.log(uniqueData);
    if (uniqueData.hasOwnProperty(key)) {
      outputData.push([key, ...uniqueData[key]]);
    }
  }
  var outputRange = sheet.getRange(2, 1, outputData.length, outputData[0].length);
  outputRange.setValues(outputData); 
}
